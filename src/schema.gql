# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  name: String!
  phoneNumber: String!
  email: String!
  avatar: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DefaultMessage {
  message: String!
}

type RegisterOtpResponse {
  message: String!
  increment: Int!
  availableNextAt: DateTime!
}

type Token {
  accessToken: String!
  expiresAt: Int!
  refreshToken: String
}

type Group {
  id: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  groupUsers: [GroupUser!]!
  users: [User!]!
}

type GroupUser {
  id: String!
  groupId: String!
  userId: String!
  role: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  group: Group!
  user: User!
}

type Shopping {
  id: String!
  userId: String!
  date: String!
  store: String!
  isPpn: Boolean!
  delivery: Float!
  discount: Float!
  ppn: Float!
  subtotal: Float!
  grandTotal: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  shoppingItems: [ShoppingItem!]!
  user: User!
}

type ShoppingItem {
  id: String!
  shoppingId: String!
  borrowerId: String!
  description: String!
  price: Float!
  percentage: Float!
  delivery: Float!
  discount: Float!
  ppn: Float!
  total: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type Payment {
  userId: String!
  date: String!
  lenderId: String!
  lenderBankId: String!
  delivery: Float!
  discount: Float!
  ppn: Float!
  subtotal: Float!
  grandTotal: Float!
  paymentItems: [PaymentItem!]!
  user: User!
}

type PaymentItem {
  paymentId: String!
  shoppingId: String!
  price: Float!
  percentage: Float!
  delivery: Float!
  discount: Float!
  ppn: Float!
  total: Float!
}

type UserBank {
  id: String!
  userId: String!
  bankName: String!
  bankNumber: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type Query {
  users: [User!]!
  user(id: String!): User!
  userBanks: [UserBank!]!
  userBank(id: String!): UserBank!
  shoppings: [Shopping!]!
  shopping(id: String!): Shopping!
  payments: [Payment!]!
  payment(id: String!): Payment!
  groups: [Group!]!
  group(id: String!): Group!
}

type Mutation {
  createToken(createTokenInput: CreateTokenInput!): Token!
  createTokenByRefreshToken(createTokenByRefreshTokenInput: CreateTokenByRefreshTokenInput!): Token!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): DefaultMessage!
  resetPassword(resetPasswordInput: ResetPasswordInput!): DefaultMessage!
  registerOtp(registerOtpInput: RegisterOtpInput!): RegisterOtpResponse!
  register(registerInput: RegisterInput!): DefaultMessage!
  createUserBank(createUserBankInput: CreateUserBankInput!): UserBank!
  updateUserBank(updateUserBankInput: UpdateUserBankInput!): UserBank!
  removeUserBank(id: String!): UserBank!
  createShopping(createShoppingInput: CreateShoppingInput!): Shopping!
  updateShopping(updateShoppingInput: UpdateShoppingInput!): Shopping!
  removeShopping(id: String!): Shopping!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  removePayment(id: String!): Payment!
  createGroup(createGroupInput: CreateGroupInput!): Group!
  updateGroup(updateGroupInput: UpdateGroupInput!): Group!
  removeGroup(id: String!): Group!
  exitGroup(id: String!): Group!
  inviteGroupUser(inviteGroupUserInput: InviteGroupUserInput!): Group!
  removeGroupUser(removeGroupUserInput: RemoveGroupUserInput!): Group!
}

input CreateTokenInput {
  username: String!
  password: String!
}

input CreateTokenByRefreshTokenInput {
  accessToken: String!
  refreshToken: String!
}

input CreateUserInput {
  name: String!
  phoneNumber: String!
  password: String!
  email: String
  avatar: String
}

input UpdateUserInput {
  id: String!
  name: String!
  phoneNumber: String!
  email: String
  avatar: String
}

input ForgotPasswordInput {
  email: String!
}

input ResetPasswordInput {
  email: String!
  token: String!
  password: String!
}

input RegisterOtpInput {
  phoneNumber: String!
}

input RegisterInput {
  name: String!
  password: String!
  phoneNumber: String!
  otp: String!
}

input CreateUserBankInput {
  bankName: String!
  bankNumber: String!
}

input UpdateUserBankInput {
  bankName: String!
  bankNumber: String!
  id: String!
}

input CreateShoppingInput {
  date: String!
  store: String!
  isPpn: Boolean!
  delivery: Float!
  discount: Float!
  shoppingItems: [CreateShoppingItemInput!]!
}

input CreateShoppingItemInput {
  id: String
  borrowerId: String!
  price: Float!
  description: String!
}

input UpdateShoppingInput {
  date: String
  store: String
  isPpn: Boolean
  delivery: Float
  discount: Float
  shoppingItems: [CreateShoppingItemInput!]
  id: String!
}

input CreatePaymentInput {
  lenderId: String!
  lenderBankId: String!
  date: String!
  paymentItems: [CreatePaymentItemInput!]!
}

input CreatePaymentItemInput {
  shoppingId: String!
}

input UpdatePaymentInput {
  lenderId: String
  lenderBankId: String
  date: String
  paymentItems: [CreatePaymentItemInput!]
  id: String!
}

input CreateGroupInput {
  name: String!
}

input UpdateGroupInput {
  name: String
  id: String!
}

input InviteGroupUserInput {
  id: String!
  userId: String!
}

input RemoveGroupUserInput {
  id: String!
  userId: String!
}
